@echo off

:: WebApps Installer version 1.0
:: Copyright (c) 2021 Toha <tohenk@yahoo.com>
::
:: Last Modified: Jan 26, 2021

title WebApps Installer
echo WebApps Installer
echo -----------------
echo.

setlocal

:: Change to current directory,
:: vista run as administrator always start from SYSDIR
%~d0
cd %~dp0
set CD=%~dp0

:: Prepare variables
set NEED_ADMIN=0
set INSTALL_APACHE=1
set INSTALL_PHP=1
set INSTALL_SERVICE=0
set INSTALL_PHP_EXTENSION=0
set INSTALL_EXTENSIONS=xdebug mongodb
set ENABLED_EXTENSIONS=curl fileinfo gd gd2 intl mbstring mysqli openssl pdo_firebird pdo_mysql pdo_sqlite sqlite3 xsl

:: Parse options
:parse_opts
if [%1]==[--help] (
  goto :show_usage
)
if [%1]==[--no-apache] (
  set INSTALL_APACHE=0
  shift
  goto :parse_opts
)
if [%1]==[--no-php] (
  set INSTALL_PHP=0
  shift
  goto :parse_opts
)
if [%1]==[--service-only] (
  set INSTALL_APACHE=0
  set INSTALL_PHP=0
  set INSTALL_SERVICE=1
  shift
  goto :parse_opts
)
if [%1]==[--php-extension-only] (
  set INSTALL_APACHE=0
  set INSTALL_PHP=0
  set INSTALL_PHP_EXTENSION=1
  shift
  goto :parse_opts
)

:: Get VC runtime version to use
if not [%1]==[] (
  set VC=%1
) else (
  goto :show_usage
)

:: Show basic information
if exist "%ProgramFiles(x86)%" (
  echo Host is Windows 64-bit
) else (
  echo Host is Windows 32-bit
)
echo Current dir is %CD%

if [%INSTALL_APACHE%]==[1] set NEED_ADMIN=1
if [%INSTALL_SERVICE%]==[1] set NEED_ADMIN=1

if [%NEED_ADMIN%]==[0] goto :check_prerequisite

:: Must be run as admin, https://stackoverflow.com/questions/4051883/batch-script-how-to-check-for-admin-rights#11995662
net session >nul 2>&1
if not %errorLevel%==0 goto :err_need_admin

:check_prerequisite
:: Verify install source
if not exist "%CD%Installer\%VC%" (
  echo Installer source for %VC% not found, aborting
  echo.
  goto :end
)

:: Verify 7-Zip
if exist "%ProgramFiles(x86)%\7-Zip\7z.exe" (
  set ZIP="%ProgramFiles(x86)%\7-Zip\7z.exe"
) else (
  set ZIP="%ProgramFiles%\7-Zip\7z.exe"
)
if not exist %ZIP% goto :err_no_7zip

:: Make temporary directory
if not exist "%CD%Temp" mkdir "%CD%Temp"

:: Variables for Apache
set APACHE_DIR=Apache24
set APACHE_CONF=%CD%%APACHE_DIR%\conf\httpd.conf
set APACHE_BIN=%CD%%APACHE_DIR%\bin\httpd.exe
set APACHE_SERVICE=Apache2.4

:: Variables for PHP
set PHP_DIR=PHP

:: Installation default
if [%INSTALL_APACHE%]==[1] (
  set INSTALL_SERVICE=1
)
if [%INSTALL_PHP%]==[1] (
  set INSTALL_PHP_EXTENSION=1
)

:: Installation states
set INSTALL_APACHE_DONE=0
set INSTALL_PHP_DONE=0
set INSTALL_SERVICE_DONE=0
set INSTALL_PHP_EXTENSION_DONE=0

:: Installation loop
:do_install
if [%INSTALL_APACHE%]==[1] (
  if [%INSTALL_APACHE_DONE%]==[0] (
    set INSTALL_APACHE_DONE=1
    goto :apache_install
  )
)
if [%INSTALL_PHP%]==[1] (
  if [%INSTALL_PHP_DONE%]==[0] (
    set INSTALL_PHP_DONE=1
    goto :php_install
  )
)
if [%INSTALL_PHP_EXTENSION%]==[1] (
  if [%INSTALL_PHP_EXTENSION_DONE%]==[0] (
    set INSTALL_PHP_EXTENSION_DONE=1
    goto :php_install_extensions
  )
)
if [%INSTALL_SERVICE%]==[1] (
  if [%INSTALL_SERVICE_DONE%]==[0] (
    set INSTALL_SERVICE_DONE=1
    goto :apache_install_service
  )
)
goto :end

:apache_install
  :: Skip Apache install if backup found
  if exist "%CD%%APACHE_DIR%~" (
    echo Previous install backup found, skipping Apache install
    echo To continue, please manually remove the %CD%%APACHE_DIR%~ directory
    goto :do_install
  )
  :: Stop Apache service
  call :query_service %APACHE_SERVICE%
  if [%IS_INSTALLED%]==[0] goto :php_install
  if [%IS_RUNNING%]==[1] (
    echo Stopping service %APACHE_SERVICE%
    sc stop %APACHE_SERVICE% >nul
  )
  if exist "%APACHE_BIN%" (
    "%APACHE_BIN%" -k uninstall
  )
  :: Find Apache installer source
  call :find_archive httpd
  if [%ARCHIVE%]==[] goto :err_no_apache_source
  echo Installing Apache httpd from %ARCHIVE%
  if exist "%CD%%APACHE_DIR%" (
    ren "%CD%%APACHE_DIR%" %APACHE_DIR%~
  )
  %ZIP% x -y %CD%Installer\%VC%\%ARCHIVE% %APACHE_DIR% >nul
  call :apache_conf_server_root "%APACHE_CONF%" "%CD%%APACHE_DIR%"
  call :apache_conf_add_include "%APACHE_CONF%" %~0
  goto :do_install

:apache_install_service
  if exist "%APACHE_BIN%" (
    "%APACHE_BIN%" -k install
    sc config %APACHE_SERVICE% start= demand
  )
  goto :do_install

:apache_conf_server_root
  set CONF=%~1
  set SVR_ROOT=%~2
  set SVR_ROOT_SLASH=%SVR_ROOT:\=/%
  if exist "%CONF%" (
    powershell -Command "(Get-Content '%CONF%') -replace 'Define SRVROOT """"(.*)""""','Define SRVROOT """"%SVR_ROOT_SLASH%""""' | Out-File -Encoding default '%CONF%'"
  )
  goto :eof

:apache_conf_add_include
  set CONF=%~1
  set GENERATOR=%2
  if exist "%CONF%" (
    echo # Autogenerated by %GENERATOR%>>%CONF%
    echo Include ../Conf/modules/*.load>>%CONF%
    echo Include ../Conf/vhosts/*.conf>>%CONF%
    echo Include ../Conf/extras/*.conf>>%CONF%
  )
  goto :eof

:php_install
  :: Skip PHP install if backup found
  if exist "%CD%%PHP_DIR%~" (
    echo Previous install backup found, skipping PHP install
    echo To continue, please manually remove the %CD%%PHP_DIR%~ directory
    goto :do_install
  )
  :: Find PHP installer source
  call :find_archive php
  if [%ARCHIVE%]==[] goto :err_no_php_source
  echo Installing PHP from %ARCHIVE%
  if exist "%CD%%PHP_DIR%" (
    ren "%CD%%PHP_DIR%" %PHP_DIR%~
  )
  %ZIP% x -y -o%CD%%PHP_DIR% %CD%Installer\%VC%\%ARCHIVE% >nul
  set PHP_VER=%ARCHIVE:~4,1%
  if exist "%CD%%PHP_DIR%~\php%PHP_VER%ts.dll" (
    if exist "%CD%%PHP_DIR%~\php.ini" (
      echo Restoring php.ini
      copy /y "%CD%%PHP_DIR%~\php.ini" "%CD%%PHP_DIR%\php.ini" >nul
    )
  )
  if not exist "%CD%%PHP_DIR%\php.ini" (
    echo Creating default php.ini
    copy /y "%CD%%PHP_DIR%\php.ini-development" "%CD%%PHP_DIR%\php.ini" >nul
  )
  if exist "%CD%%PHP_DIR%~\php%PHP_VER%ts.dll" (
    if exist "%CD%%PHP_DIR%~\php-cli.ini" (
      echo Restoring php-cli.ini
      copy /y "%CD%%PHP_DIR%~\php-cli.ini" "%CD%%PHP_DIR%\php-cli.ini" >nul
    )
  )
  if not exist "%CD%%PHP_DIR%\php-cli.ini" (
    echo Creating default php-cli.ini
    copy /y "%CD%%PHP_DIR%\php.ini-development" "%CD%%PHP_DIR%\php-cli.ini" >nul
  )
  :: Fix PHP apache module loader if needed
  call :php_fix_or_create_module_load "%PHP_VER%" "%CD%Conf\modules" "%CD%%PHP_DIR%"
  :: Fix PHP extension dir if needed
  call :php_fix_extension_dir "%CD%%PHP_DIR%\php.ini" "%CD%%PHP_DIR%\ext"
  call :php_fix_extension_dir "%CD%%PHP_DIR%\php-cli.ini" "%CD%%PHP_DIR%\ext"
  :: Enable extensions
  call :php_enable_extension "%CD%%PHP_DIR%\php.ini" %ENABLED_EXTENSIONS%
  call :php_enable_extension "%CD%%PHP_DIR%\php-cli.ini" %ENABLED_EXTENSIONS%
  :: Add PHP to PATH environment variable
  call :add_path "%CD%%PHP_DIR%"
  goto :do_install

:php_fix_or_create_module_load
  set PHP_VER=%~1
  set MODULE_DIR=%~2
  set MY_DIR=%~3
  if [%PHP_VER%]==[] goto :eof
  echo Checking PHP Apache module for version %PHP_VER%
  for /l %%x in (7,1,9) do (
    if [%%x]==[%PHP_VER%] (
      if exist %MODULE_DIR%\php%%x.load- ren %MODULE_DIR%\php%%x.load- php%%x.load
    ) else (
      if exist %MODULE_DIR%\php%%x.load ren %MODULE_DIR%\php%%x.load php%%x.load-
    )
  )
  set MY_DIR_SLASH=%MY_DIR:\=/%
  set MY_VER=8
  if %PHP_VER% geq %MY_VER% (
    set PHP_MODULE=php_module
  ) else (
    set PHP_MODULE=php%PHP_VER%_module
  )
  set APACHE_VER=%APACHE_SERVICE:~6,3%
  set APACHE_VER_NORMALIZED=%APACHE_VER:.=_%
  set PHP_MODULE_LOADER=%MODULE_DIR%\php%PHP_VER%.load
  if not exist "%PHP_MODULE_LOADER%" (
    echo Creating PHP Apache module loader %PHP_MODULE_LOADER%
    echo LoadModule %PHP_MODULE% "%MY_DIR_SLASH%/php%PHP_VER%apache%APACHE_VER_NORMALIZED%.dll">%PHP_MODULE_LOADER%
    echo PHPIniDir "%MY_DIR_SLASH%">>%PHP_MODULE_LOADER%
    echo.>>%PHP_MODULE_LOADER%
    echo ^<IfModule mime_module^>>>%PHP_MODULE_LOADER%
    echo     AddType application/x-httpd-php .php>>%PHP_MODULE_LOADER%
    echo ^</IfModule^>>>%PHP_MODULE_LOADER%
    echo.>>%PHP_MODULE_LOADER%
    echo ^<IfModule dir_module^>>>%PHP_MODULE_LOADER%
    echo     DirectoryIndex index.php>>%PHP_MODULE_LOADER%
    echo ^</IfModule^>>>%PHP_MODULE_LOADER%
  )
  goto :eof

:php_fix_extension_dir
  set PHP_INI=%~1
  set PHP_EXT_DIR=%~2
  set PHP_EXT_DIR_SLASH=%PHP_EXT_DIR:\=/%
  if exist "%PHP_INI%" (
    powershell -Command "(Get-Content '%PHP_INI%') -replace '(;)*extension_dir = """"(.*)""""','extension_dir = """"%PHP_EXT_DIR_SLASH%""""' | Out-File -Encoding default '%PHP_INI%'"
  )
  goto :eof

:php_enable_extension
  set PHP_INI=%~1
  if not exist "%PHP_INI%" goto :eof
  echo Enable PHP extensions in %PHP_INI%
  :php_enable_extension_loop
  if [%2]==[] goto :eof
  set PHP_EXT=%2
  shift
  powershell -Command "(Get-Content '%PHP_INI%') -replace ';extension=%PHP_EXT%','extension=%PHP_EXT%' | Out-File -Encoding default '%PHP_INI%'"
  goto :php_enable_extension_loop

:php_install_extensions
  call :php_install_ext %INSTALL_EXTENSIONS%
  goto :do_install

:php_install_ext
  if [%1]==[] goto :eof
  set PHP_EXT=%1
  shift
  echo Checking for extension install %PHP_EXT%
  call :find_archive php_%PHP_EXT%
  if not [%ARCHIVE%]==[] (
    echo Installing %PHP_EXT% extension from %ARCHIVE%
    %ZIP% x -y -o%CD%%PHP_DIR%\ext %CD%Installer\%VC%\%ARCHIVE% php_%PHP_EXT%.dll >nul
  )
  goto :php_install_ext

:add_path
  set PATH_TO_ADD=%~1
  set TMP_FILE=%CD%Temp\~path.tmp
  echo %PATH%>%TMP_FILE%
  findstr /C:"%PATH_TO_ADD%" %TMP_FILE% >nul
  if errorlevel 1 (
    setx /m PATH "%PATH%;%PATH_TO_ADD%" >nul
    echo Path %PATH_TO_ADD% added to PATH environment variable
  )
  goto :eof

:find_archive
  set ARCHIVE=
  set TMP_FILE=%CD%Temp\~files.tmp
  dir /b %CD%Installer\%VC%\%1-*.zip >%TMP_FILE%
  if exist "%ProgramFiles(x86)%" (
    set ARCHS=x64 win64
  ) else (
    set ARCHS=x86 win32
  )
  for %%i in (%ARCHS%) do (
    for /f "delims=" %%j in ('findstr %%i %TMP_FILE%') do (
      set ARCHIVE=%%j
    )
  )
  goto :eof

:query_service
  set IS_INSTALLED=0
  set IS_RUNNING=0
  set TMP_FILE=%CD%Temp\~service.tmp
  sc query %1 >%TMP_FILE%
  :: service not installed
  if errorlevel 2 goto :eof
  set IS_INSTALLED=1
  findstr /C:"RUNNING" %TMP_FILE% >nul
  if errorlevel 1 goto :eof
  set IS_RUNNING=1
  goto :eof

:err_need_admin
  echo You need to be an Administrator
  goto :end

:err_no_7zip
  echo 7-Zip not found
  goto :end

:err_no_php_source
  echo PHP binary zip not found
  goto :end

:err_no_apache_source
  echo Apache httpd binary zip not found
  goto :end

:show_usage
  echo Usage:
  echo   %~0 [options] [VC_VERSION]
  echo.
  echo Options:
  echo --no-apache           Do not install Apache
  echo --no-php              Do not install PHP
  echo --service-only        Install Apache service only
  echo --php-extension-only  Install PHP extensions only
  echo.
  goto :end

:end
endlocal